{
  "name": "production-mcp-server",
  "version": "1.0.0",
  "port": 3001,
  "security": {
    "authentication": {
      "enabled": true,
      "apiKeys": [
        {
          "key": "REPLACE_WITH_STRONG_RANDOM_KEY_1",
          "name": "Admin Key",
          "permissions": ["*:*"]
        },
        {
          "key": "REPLACE_WITH_STRONG_RANDOM_KEY_2",
          "name": "User Key",
          "permissions": ["tools:call", "prompts:*", "resources:*"]
        },
        {
          "key": "REPLACE_WITH_STRONG_RANDOM_KEY_3",
          "name": "Read-Only Key",
          "permissions": ["tools:list", "prompts:list", "resources:read"]
        }
      ]
    },
    "rateLimit": {
      "enabled": true,
      "global": {
        "window": 60000,
        "maxRequests": 1000
      },
      "perTool": {
        "expensive-operation": {
          "window": 60000,
          "maxRequests": 10
        },
        "data-query": {
          "window": 60000,
          "maxRequests": 50
        }
      }
    },
    "audit": {
      "enabled": true,
      "logFile": "/var/log/mcp/audit.log",
      "logLevel": "info"
    }
  },
  "tools": [
    {
      "name": "calculate",
      "description": "Performs mathematical calculations",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": ["add", "subtract", "multiply", "divide"],
            "description": "Mathematical operation to perform"
          },
          "a": {
            "type": "number",
            "description": "First operand"
          },
          "b": {
            "type": "number",
            "description": "Second operand"
          }
        },
        "required": ["operation", "a", "b"]
      },
      "handler": {
        "type": "file",
        "path": "./src/handlers/examples/calculateHandler.ts"
      }
    },
    {
      "name": "fetch-data",
      "description": "Fetches data from external API",
      "inputSchema": {
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string",
            "description": "API endpoint to fetch from"
          }
        },
        "required": ["endpoint"]
      },
      "handler": {
        "type": "http",
        "url": "https://api.example.com/${args.endpoint}",
        "method": "GET",
        "headers": {
          "Authorization": "Bearer ${API_TOKEN}",
          "Content-Type": "application/json"
        },
        "timeout": 10000
      }
    }
  ],
  "prompts": [
    {
      "name": "code-review",
      "description": "Code review prompt template",
      "arguments": [
        {
          "name": "language",
          "description": "Programming language",
          "required": true
        },
        {
          "name": "context",
          "description": "Additional context",
          "required": false
        }
      ],
      "template": "Please review the following {{language}} code for:\n- Code quality\n- Security issues\n- Performance concerns\n- Best practices\n\nContext: {{context}}"
    }
  ],
  "resources": [
    {
      "uri": "https://production.example.com/api/docs",
      "name": "API Documentation",
      "description": "Complete API documentation",
      "mimeType": "application/json",
      "content": {
        "version": "1.0.0",
        "endpoints": {
          "tools": "/mcp (POST)",
          "health": "/health (GET)",
          "metrics": "/metrics (GET)"
        },
        "authentication": "Bearer token required"
      }
    }
  ]
}